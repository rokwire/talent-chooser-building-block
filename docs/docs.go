// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v3/ui-content": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the ui content based on the parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APIs"
                ],
                "operationId": "GetUIContentV3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for example '2.2'",
                        "name": "data-version",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/getUIContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UIContent"
                        }
                    }
                }
            }
        },
        "/api/version": {
            "get": {
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "APIs"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Card": {
            "type": "object",
            "properties": {
                "card_number": {
                    "type": "string"
                },
                "library_number": {
                    "type": "string"
                }
            }
        },
        "IliniCash": {
            "type": "object",
            "properties": {
                "HousingResidentStatus": {
                    "type": "boolean"
                }
            }
        },
        "Pii": {
            "type": "object",
            "properties": {
                "documentType": {
                    "type": "string"
                }
            }
        },
        "Platform": {
            "type": "object",
            "properties": {
                "os": {
                    "type": "string"
                }
            }
        },
        "PrivacySettings": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id_token": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "UIContent": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "privacySettings": {
                    "type": "object",
                    "$ref": "#/definitions/PrivacySettings"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preferred_username": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                },
                "uiucedu_is_member_of": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uiucedu_uin": {
                    "type": "string"
                }
            }
        },
        "getUIContentRequest": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "type": "object",
                    "$ref": "#/definitions/Token"
                },
                "auth_user": {
                    "type": "object",
                    "$ref": "#/definitions/UserInfo"
                },
                "card": {
                    "type": "object",
                    "$ref": "#/definitions/Card"
                },
                "illini_cash": {
                    "type": "object",
                    "$ref": "#/definitions/IliniCash"
                },
                "pii": {
                    "type": "object",
                    "$ref": "#/definitions/Pii"
                },
                "platform": {
                    "type": "object",
                    "$ref": "#/definitions/Platform"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/User"
                }
            }
        }
    },
    "securityDefinitions": {
        "RokwireAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.7.0",
	Host:        "localhost",
	BasePath:    "/talent-chooser",
	Schemes:     []string{"https"},
	Title:       "Rokwire Talent Chooser Building Block API",
	Description: "Rokwire Talent Chooser Building Block API Documentation.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
